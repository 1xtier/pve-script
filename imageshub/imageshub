#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;
use LWP::UserAgent;
use File::Path 'make_path';
use File::Basename;


my $CORES = 1;
my $MEMORY = 1024;
my $POOL = 'local';
my $NET = 'vmbr0';
my $IMAGESPOOL = '/tmp/imageshub';
my ($action, $NAME) = @ARGV;

if (!$action || $action eq 'help') {
    helpcli();
    exit 0;
}

if (!$NAME) {
    die "Error: Version is required. Usage: $0 [options] <distro> <version>\n";
}

GetOptions (
  'cores=i' => \$CORES,
  'memory=i'  => \$MEMORY,
  'pool=s'    => \$POOL,
  'net=s'     => \$NET,
) or die "Usage: $0 [options] <distro> <version>\n";


sub helpcli {
  print <<'HELP';
alma   | Download Alma Linux 8 | 9
rocky  | Download Rocky Linux 8 | 9 | 10
centos | Download centos linux stream 
debian | Download Debian Linux 11 | 12
ubuntu | Download Ubuntu Linux 20 | 22 | 24
fedora | Download fedora server 

Options:
  --cores N    Number of CPU cores (default: 1)
  --memory N   Memory in MB (default: 1024)
  --pool NAME  Storage pool (default: local)
  --net NAME   Network bridge (default: vmbr0)
HELP
}


sub remove_images {
  opendir(my $dh, $IMAGESPOOL) or return;
  while (my $file = readdrir($dh)) {
    next if $file =~ /^\./;
    unlink("$IMAGESPOOL/$file");
  }
  closedir($dh);
}

sub download_file {
  my ($url, $filename) = @_;
  make_path($IMAGESPOOL) unless -d $IMAGESPOOL;
   my $local_path = "$IMAGESPOOL/$filename";

   if (system('which wget >dev/null 2>&1') == 0) {
      print "Downloading with wget: $filename\n";
      return system("wget -q -O '$local_path' '$url'") == 0;
   }
  elsif (system('which curl >/dev/null 2>&1') == 0) {
    print "Downloading with curl: $filename\n";
    return system("curl -s -L -o '$local_path' '$url'") == 0;
  }
  else {
    print "Downloading with Perl: $filename\n";
    return download_with_perl($url, $local_path);
  }
}

sub run_command {

  my($cmd) = @_;
  print "Running: $cmd\n";
  system($cmd) == 0 or warn "Command failed: $cmd\n";
}

sub create_vm_template {
  my ($uuid, $name, $images_file, $resize_gb) = @_;
  print "[1/6] Download cloud-init images $name\n";
  return unless download_file($images_file, basename($images_file));

  my $local_file = "$IMAGESPOOL/" . basename($images_file);
  print "[2/6] Resize image +${resize_gb}G\n";
  run_command("qemu-img resize $local_file +${resize_gb}G");
  print "[3/6] Create VM\n";
  run_command("qm create $uuid --name $name --ostype l24 --cpu cputype=host --cores $CORES --socket 1 --memory $MEMORY --scsihw virtio-scsi-pci --net0 virtio,bridge=$NET");
  print "[4/6] Import disk\n";
  run_command("qm importdisk $uuid $local_file $POOL");
  run_command("qm set $uuid --scsihw virtio-scsi-pci --scsi0 $POOL:vm-$uuid-disk-0");
  run_command("qm set $uuid --boot c --bootdisk scsi0");
  print "[5/6] Configure Cloud-init\n";
  run_command("qm set $uuid --ide2 $POOL:cloudinit");
  run_command("qm set $uuid --ipconfig0 ip=dhcp");
  run_command("qm set $uuid --ciuser images --cipassword 'imageshub'");
  if ( -e "$ENV{HOME}/.ssh/id_rsa.pub") {
    run_command("qm set $uuid --sshkey \"\$(cat ~/.ssh/id_rsa.pub)\"");
  }
  print "[6/6] Save as template and cleanup\n";
  run_command("qm template $uuid");
  remove_images();
}

sub almalinux {
    if ($NAME eq "8") {
        create_vm_template(
            9000,
            'almalinux-8',
            'https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/AlmaLinux-8-GenericCloud-8.10-20240530.x86_64.qcow2',
            5
        );
    } elsif ($NAME eq "9") {
        create_vm_template(
            9002,
            'almalinux-9',
            'https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/AlmaLinux-9-GenericCloud-latest.x86_64.qcow2',
            5
        );
    } else {
        print "There is no such version\n";
    }
}

sub ubuntulinux {
    if ($NAME eq "20") {
        create_vm_template(
            9050,
            'ubuntuserver-20.04',
            'https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img',
            13
        );
        # Переименовываем .img в .qcow2
        rename("$IMAGESPOOL/focal-server-cloudimg-amd64.img", "$IMAGESPOOL/focal-server-cloudimg-amd64.qcow2");
    } elsif ($NAME eq "22") {
        create_vm_template(
            9051,
            'ubuntuserver-22.04',
            'https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img',
            13
        );
        rename("$IMAGESPOOL/jammy-server-cloudimg-amd64.img", "$IMAGESPOOL/jammy-server-cloudimg-amd64.qcow2");
    } elsif ($NAME eq "24") {
        create_vm_template(
            9052,
            'ubuntuserver-24.04',
            'https://cloud-images.ubuntu.com/noble/20250725/noble-server-cloudimg-amd64.img',
            13
        );
        rename("$IMAGESPOOL/noble-server-cloudimg-amd64.img", "$IMAGESPOOL/noble-server-cloudimg-amd64.qcow2");
    } else {
        print "There is no such version\n";
    }
}

sub rockylinux {
    if ($NAME eq "8") {
        create_vm_template(
            9010,
            'rockylinux-8',
            'https://dl.rockylinux.org/pub/rocky/8/images/x86_64/Rocky-8-GenericCloud-Base.latest.x86_64.qcow2',
            5
        );
    } elsif ($NAME eq "9") {
        create_vm_template(
            9011,
            'rockylinux-9',
            'https://dl.rockylinux.org/pub/rocky/9/images/x86_64/Rocky-9-GenericCloud-Base.latest.x86_64.qcow2',
            5
        );
    } elsif ($NAME eq "10") {
        create_vm_template(
            9012,
            'rockylinux-10',
            'https://dl.rockylinux.org/pub/rocky/10/images/x86_64/Rocky-10-GenericCloud-Base.latest.x86_64.qcow2',
            5
        );
    } else {
        print "There is no such version\n";
    }
}

sub debianlinux {
    if ($NAME eq "11") {
        create_vm_template(
            9020,
            'debianlinux-11',
            'https://cloud.debian.org/images/cloud/bullseye/20250801-2191/debian-11-genericcloud-amd64-20250801-2191.qcow2',
            12
        );
    } elsif ($NAME eq "12") {
        create_vm_template(
            9021,
            'debianlinux-12',
            'https://cloud.debian.org/images/cloud/bookworm/20250804-2194/debian-12-genericcloud-amd64-20250804-2194.qcow2',
            12
        );
    } else {
        print "There is no such version\n";
    }
}

sub fedoralinux {
    create_vm_template(
        9030,
        'fedoralinux-server42',
        'https://download.fedoraproject.org/pub/fedora/linux/releases/42/Server/x86_64/images/Fedora-Server-Guest-Generic-42-1.1.x86_64.qcow2',
        5
    );
}

sub centoslinux {
    create_vm_template(
        9040,
        'centoslinux-stream-10',
        'https://cloud.centos.org/centos/10-stream/x86_64/images/CentOS-Stream-GenericCloud-10-latest.x86_64.qcow2',
        5
    );
}

if ($action eq 'alma') {
    almalinux();
} elsif ($action eq 'ubuntu') {
    ubuntulinux();
} elsif ($action eq 'debian') {
    debianlinux();
} elsif ($action eq 'rocky') {
    rockylinux();
} elsif ($action eq 'centos') {
    centoslinux();
} elsif ($action eq 'fedora') {
    fedoralinux();
} elsif ($action eq 'help') {
    helpcli();
} else {
    print "Unknown action: $action\n";
    helpcli();
}



