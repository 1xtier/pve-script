#!/usr/bin/env perl

use strict;
use warnings;
use LWP::UserAgent;
use File::Path 'make_path';

my $LOCAL_POOL = '/var/lib/vz/template/iso';

my ($action, $version) = @ARGV;
my %distros = (
    alma => {
      8 => 'https://repo.almalinux.org/almalinux/8.10/isos/x86_64/AlmaLinux-8.10-x86_64-minimal.iso',
      9 => 'https://repo.almalinux.org/almalinux/9.6/isos/x86_64/AlmaLinux-9.6-x86_64-minimal.iso',
      10 => 'https://repo.almalinux.org/almalinux/10/isos/x86_64/AlmaLinux-10.0-x86_64-minimal.iso',
    },
    ubuntu => {
      20 => 'https://releases.ubuntu.com/20.04/ubuntu-20.04.6-live-server-amd64.iso',
      22 => 'https://releases.ubuntu.com/releases/22.04/ubuntu-22.04.5-live-server-amd64.iso',
      24 => 'https://releases.ubuntu.com/24.04.2/ubuntu-24.04.2-live-server-amd64.iso',
      25 => 'https://releases.ubuntu.com/25.04/ubuntu-25.04-live-server-amd64.iso',
    },
    rocky => {
      8 => 'https://download.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-8.10-x86_64-minimal.iso',
      9 => 'https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.6-x86_64-minimal.iso',
      10 => 'https://download.rockylinux.org/pub/rocky/10/isos/x86_64/Rocky-10.0-x86_64-minimal.iso',
    },
    debian => {
      11 => 'https://cdimage.debian.org/cdimage/archive/11.11.0/amd64/iso-cd/debian-11.11.0-amd64-netinst.iso',
      12 => 'https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.11.0-amd64-netinst.iso',
    },
    fedora => {
      42 => 'https://download.fedoraproject.org/pub/fedora/linux/releases/42/Server/x86_64/iso/Fedora-Server-netinst-x86_64-42-1.1.iso',
    },
    centos => {
      10 => 'https://mirrors.centos.org/mirrorlist?path=/10-stream/BaseOS/x86_64/iso/CentOS-Stream-10-latest-x86_64-dvd1.iso',
    },
  );
sub help {
  print <<'HELP';
  alma   | Download Alma Linux 8 | 9 | 10
  rocky  | Download Rocky Linux 8 | 9 | 10
  centos | Download centos linux stream 
  debian | Download Debian Linux 11 | 12
  ubuntu | Download Ubuntu Linux 20 | 22 | 24 | 25
  fedora | Download fedora server 
HELP

}

sub download {
  my ($url, $filename) = @_ ;
  make_path($LOCAL_POOL) unless -d $LOCAL_POOL;

  my $ua = LWP::UserAgent->new(timeout => 30);
  my $response = $ua->mirror($url, "$LOCAL_POOL/$filename");

  if ($response->is_success) {
      print "✓ Downloaded: $filename\n";
  } else {
      print print "✗ Failed: " . $response->status_line . "\n";;
  }
}

if (!$action || $action eq 'help') {
  help();
} elsif (exists $distros{$action}) {
  if ($version && exists $distros{$action}{$version}) {
      my $url = $distros{$action}{$version};
      my $filename = (split '/', $url)[-1];
      print "Downloading $action Linux $version...\n";
      download($url, $filename);
  }  else {
    print "Available versions for $action: " . join(',', keys %{$distros{$action}}) . "\n";
  } 
} else {
    print "Unknown distribution: $action\n";
    help();
}

